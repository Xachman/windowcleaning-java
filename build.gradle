apply plugin: 'java'
apply plugin: 'application'
mainClassName = 'com.gti.windowcleaning.Main'
sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
version = '1.0'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}

repositories {
    mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
}

dependencies {
    // TODO: Add dependencies here ...
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
    compile 'com.googlecode.json-simple:json-simple:1.1'
    compile "com.sparkjava:spark-core:2.7.2"
    compile 'com.j256.ormlite:ormlite-jdbc:5.1'
    compile 'org.xerial:sqlite-jdbc:3.23.1'
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.4'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.4'
    compile 'org.slf4j:slf4j-simple:1.7.21'
    compileOnly "org.projectlombok:lombok:1.16.16"
    compile 'org.apache.pdfbox:pdfbox:2.0.12'
    testCompile 'org.skyscreamer:jsonassert:1.5.0'
    testCompile group: 'commons-io', name: 'commons-io', version: '2.6'
    testCompile group: 'junit', name: 'junit', version: '4.10'
    testCompile "org.mockito:mockito-core:2.+"
}

task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Windowcleaning App',  
        	'Implementation-Version': version,
        	'Main-Class': mainClassName
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}